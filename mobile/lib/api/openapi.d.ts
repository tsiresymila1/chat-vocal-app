/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/auth/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Register a new user
         * @description Create a new user account and return authentication token
         */
        post: operations["08136088c4862c313b35d6518bab8d3a"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Login user
         * @description Authenticate user and return access token
         */
        post: operations["99d66635c4992aeaa6aa44ff653d0563"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Logout user
         * @description Invalidate the current access token
         */
        post: operations["6abf3b64a4bc7838d56346f05a5153af"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/user": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get authenticated user
         * @description Get the currently authenticated user's details
         */
        get: operations["32d03117b496ae02c2543b61438d24ad"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/chats": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get all active chats
         * @description Retrieve all active chats for the authenticated user
         */
        get: operations["282fdd00e50391b0857b55cc3769325b"];
        put?: never;
        /**
         * Create a new chat
         * @description Create a new chat conversation for the authenticated user
         */
        post: operations["d530e53174e38fde88ad879287c0962b"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/chats/{chat}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get chat details
         * @description Retrieve detailed information about a specific chat
         */
        get: operations["9546e737db42ccbec0748987ac00b47e"];
        put?: never;
        post?: never;
        /**
         * Delete a chat
         * @description Delete a chat and all its associated messages
         */
        delete: operations["6c3356b1d607ee4bbdb296de48c24c3c"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/chats/{chat}/messages": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get chat messages
         * @description Retrieve all messages for a specific chat
         */
        get: operations["ed8820ee981e0aa106f48ac69983e460"];
        put?: never;
        /**
         * Create a new message
         * @description Create a new message in a chat (text or audio)
         */
        post: operations["dfdf2c894530860f4aa17a26f040881e"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/chats/{chat}/messages/transcribe": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Transcribe audio to text
         * @description Transcribes an uploaded audio file and returns the transcription.
         */
        post: operations["4bb05c7dfcbb933deab6b2ebda6bce7a"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    "08136088c4862c313b35d6518bab8d3a": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @example John Doe */
                    name: string;
                    /**
                     * Format: email
                     * @example test@example.com
                     */
                    email: string;
                    /**
                     * Format: password
                     * @example password123
                     */
                    password: string;
                    /**
                     * Format: password
                     * @example password123
                     */
                    password_confirmation: string;
                };
            };
        };
        responses: {
            /** @description User registered successfully */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        user?: Record<string, never>;
                        access_token?: string;
                        /** @example Bearer */
                        token_type?: string;
                        initial_chat?: Record<string, never>;
                    };
                };
            };
            /** @description Validation error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "99d66635c4992aeaa6aa44ff653d0563": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: email
                     * @example test@example.com
                     */
                    email: string;
                    /**
                     * Format: password
                     * @example password123
                     */
                    password: string;
                };
            };
        };
        responses: {
            /** @description Login successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        user?: Record<string, never>;
                        access_token?: string;
                        /** @example Bearer */
                        token_type?: string;
                    };
                };
            };
            /** @description Invalid credentials */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "6abf3b64a4bc7838d56346f05a5153af": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully logged out */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example Successfully logged out */
                        message?: string;
                    };
                };
            };
            /** @description Unauthenticated */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "32d03117b496ae02c2543b61438d24ad": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description User details retrieved successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        id?: number;
                        name?: string;
                        email?: string;
                        /** Format: date-time */
                        created_at?: string;
                        /** Format: date-time */
                        updated_at?: string;
                    };
                };
            };
            /** @description Unauthenticated */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "282fdd00e50391b0857b55cc3769325b": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description List of chats retrieved successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        id?: number;
                        title?: string;
                        user_id?: number;
                        is_active?: boolean;
                        /** Format: date-time */
                        created_at?: string;
                        /** Format: date-time */
                        updated_at?: string;
                        user?: {
                            id?: number;
                            name?: string;
                            email?: string;
                        };
                        messages?: Record<string, never>[];
                    }[];
                };
            };
            /** @description Unauthenticated */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    d530e53174e38fde88ad879287c0962b: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @example New Conversation */
                    title: string;
                };
            };
        };
        responses: {
            /** @description Chat created successfully */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        id?: number;
                        title?: string;
                        user_id?: number;
                        is_active?: boolean;
                        /** Format: date-time */
                        created_at?: string;
                        /** Format: date-time */
                        updated_at?: string;
                        user?: {
                            id?: number;
                            name?: string;
                            email?: string;
                        };
                    };
                };
            };
            /** @description Unauthenticated */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "9546e737db42ccbec0748987ac00b47e": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Chat ID */
                chat: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Chat details retrieved successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        id?: number;
                        title?: string;
                        user_id?: number;
                        is_active?: boolean;
                        /** Format: date-time */
                        created_at?: string;
                        /** Format: date-time */
                        updated_at?: string;
                        user?: {
                            id?: number;
                            name?: string;
                            email?: string;
                        };
                        messages?: Record<string, never>[];
                    };
                };
            };
            /** @description Unauthenticated */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized access */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Chat not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "6c3356b1d607ee4bbdb296de48c24c3c": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Chat ID */
                chat: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Chat deleted successfully */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthenticated */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized access */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Chat not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    ed8820ee981e0aa106f48ac69983e460: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Chat ID */
                chat: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Messages retrieved successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        data?: {
                            id?: number;
                            content?: string;
                            type?: string;
                            user_id?: number;
                            chat_id?: number;
                            is_read?: boolean;
                            audio_path?: string;
                        }[];
                        current_page?: number;
                        per_page?: number;
                        total?: number;
                    };
                };
            };
            /** @description Unauthenticated */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized access */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Chat not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    dfdf2c894530860f4aa17a26f040881e: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Chat ID */
                chat: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": {
                    /** @description Message content or transcription */
                    content: string;
                    /**
                     * @description Message type
                     * @enum {string}
                     */
                    type: "text" | "audio";
                    /**
                     * Format: binary
                     * @description Audio file (required if type is audio)
                     */
                    audio?: Record<string, never>;
                    /** @description Whether to stream the AI response */
                    stream?: boolean;
                };
            };
        };
        responses: {
            /** @description Message created successfully */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message?: {
                            id?: number;
                            content?: string;
                            type?: string;
                            user_id?: number;
                            chat_id?: number;
                            is_read?: boolean;
                            audio_path?: string;
                        };
                        ai_response?: {
                            id?: number;
                            content?: string;
                            type?: string;
                            user_id?: number;
                            chat_id?: number;
                            is_read?: boolean;
                            audio_path?: string;
                        } | null;
                    };
                };
            };
            /** @description Unauthenticated */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized access */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Chat not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "4bb05c7dfcbb933deab6b2ebda6bce7a": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Chat ID */
                chat: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": {
                    /**
                     * Format: binary
                     * @description Audio file
                     */
                    audio: Record<string, never>;
                };
            };
        };
        responses: {
            /** @description Message created successfully */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        transcription?: string;
                        language?: string;
                        audio_path?: string;
                    };
                };
            };
            /** @description Unauthenticated */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized access */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Chat not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
